heat_template_version: 2014-10-16

parameters:
  flavor:
    type: string
    description: Flavor to use for servers
    default: 1C-1GB-20GB
  public_net_id:
    type: string
    description: Public network ID
    default: ext-net
  image:
    type: string
    description: Image ID or name
    default: openedxcon2017-demo.1
  timeout:
    type: number
    description: Timeout for stack creation to finish
    default: 900

resources:
  all_done:
    type: OS::Heat::WaitCondition
    properties:
      handle: {get_resource: all_done_handle}
      count: 1
      timeout: {get_param: timeout}

  all_done_handle:
    type: OS::Heat::WaitConditionHandle

  demo_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        manage_etc_hosts: localhost
        package_update: false
        package_upgrade: false
        runcmd:
          - { get_attr: ['all_done_handle', 'curl_cli'] }

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Neutron security group rules
      name: server_security_group
      rules:
      - remote_mode: 'remote_group_id'
        direction: ingress
      - remote_ip_prefix: 0.0.0.0/0
        protocol: icmp
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        direction: ingress
        port_range_min: 22
        port_range_max: 22

  user_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: 'OS::stack_name' }
      save_private_key: true

  management_net:
    type: OS::Neutron::Net
    properties:
      name: management-net

  management_sub_net:
    type: OS::Neutron::Subnet
    properties:
      name: management-sub-net
      network_id: { get_resource: management_net }
      cidr: 192.168.122.0/24
      gateway_ip: 192.168.122.1
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      enable_dhcp: true
      allocation_pools:
        - start: "192.168.122.2"
          end: "192.168.122.50"

  router:
    type: OS::Neutron::Router

  router_gateway:
    type: OS::Neutron::RouterGateway
    properties:
      router_id: { get_resource: router }
      network_id: { get_param: public_net_id }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: management_sub_net }

  demo:
    type: OS::Nova::Server
    properties:
      name: demo
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: user_key }
      user_data:  { get_resource: demo_config }
      user_data_format: RAW
      networks:
        - port: { get_resource: demo_management_port }

  demo_management_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: management_net }
      fixed_ips:
        - ip_address: 192.168.122.100
      security_groups:
        - { get_resource: server_security_group }

  demo_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_id }
      port_id: { get_resource: demo_management_port }
      fixed_ip_address: 192.168.122.100

outputs:
  public_ip:
    description: Floating IP address of demo in public network
    value: { get_attr: [ demo_floating_ip, floating_ip_address ] }
  private_key:
    description: User private key
    value: { get_attr: [ user_key, private_key ] }
